plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.full'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

	// test
	implementation 'org.springframework:spring-test'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// web
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.session:spring-session-data-redis'

	//S3
	implementation platform("software.amazon.awssdk:bom:2.25.39") // 최신 권장
	implementation "software.amazon.awssdk:s3"
	implementation "software.amazon.awssdk:s3-transfer-manager"
	implementation "software.amazon.awssdk:netty-nio-client"

	//http5
	implementation 'org.apache.httpcomponents.client5:httpclient5'



}
configurations.configureEach {
	exclude group: "com.amazonaws", module: "aws-java-sdk-s3"
}

tasks.named('test') {
	useJUnitPlatform()
}
