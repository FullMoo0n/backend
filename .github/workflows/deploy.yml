name: Deploy Spring Backend

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Spring Code
        uses: actions/checkout@v3

      - name: 🔐 application.properties 생성
        run: |
          mkdir -p src/main/resources
          echo "spring.datasource.url=${{ secrets.DB_URL }}" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> src/main/resources/application.properties
          echo "spring.jpa.show-sql=false" >> src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.format_sql=true" >> src/main/resources/application.properties
          echo "spring.jwt.secret=${{ secrets.JWT_SECRET }}" >> src/main/resources/application.properties
          echo "spring.jwt.access-token-duration=10D" >> src/main/resources/application.properties
          echo "spring.jwt.refresh-token-duration=100D" >> src/main/resources/application.properties
          
#          echo "gpt.api-key=Bearer ${{ secrets.OPENAI_KEY }}" >> src/main/resources/application.properties
#          echo "ai.url=${{ secrets.AI_URL }}" >> src/main/resources/application.properties
          
         
          echo "cloud.aws.s3.bucket=${{ secrets.S3_BUCKET_NAME }}" >> src/main/resources/application.properties
          echo "cloud.aws.region.static=${{ secrets.S3_BUCKET_REGION }}" >> src/main/resources/application.properties
          echo "cloud.aws.stack.auto=false" >> src/main/resources/application.properties
          echo "cloud.aws.credentials.access-key=${{ secrets.AWS_ACCESS_KEY_ID }}" >> src/main/resources/application.properties
          echo "cloud.aws.credentials.secret-key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> src/main/resources/application.properties



      - name: ☕ Gradle Build (jar 생성)
        run: ./gradlew build -x test

      - name: 🐳 Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Build & Push Docker image (safe version, no cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/unithon:latest

      - name: 🚀 EC2에 SSH 접속 후 backend 재배포
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/my-app
            docker compose pull backend
            docker compose up -d backend
